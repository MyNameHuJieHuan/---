<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.bookmanager.dao.BookAddressDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.bookmanager.entity.BookAddressEntity" id="bookAddressMap">
        <result property="addressId" column="address_id"/>
        <result property="libraryId" column="library_id"/>
        <result property="door" column="door"/>
        <result property="pressmark" column="pressmark"/>
        <result property="bookRow" column="book_row"/>
        <result property="bookLine" column="book_line"/>
        <result property="status" column="status"/>
        <result property="categoryId" column="category_id"/>
        <result property="addressCode" column="address_code"/>
        <result property="deleted" column="deleted"/>
        <result property="insertName" column="insert_name"/>
        <result property="insertTime" column="insert_time"/>
        <result property="updateName" column="update_name"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <select id="getBookAddress" resultType="java.util.Map">
        select
            ba.address_id "addressId",
            ba.door "door",
            ba.pressmark "pressmark",
            ba.book_row "row",
            ba.book_line "line"
        from book_address ba
                 left join (
            select
                min(ba2.address_code) addressCode
            from book_address ba2
                     left join category category
                               on category.category_code = ba2.category_code
                     left join classify class
                               on class.classify_id = category.first_id
            where ba2.deleted = 0 and class.classify_id = #{classifyId} and ba2.library_id = #{libraryId}
        )table1
                           on table1.addressCode = ba.address_code
        where
            table1.addressCode = ba.address_code
    </select>
    <select id="getBookAddressByCategoryId" resultType="java.util.Map">
        select
            min(ba.address_id) "addressId"
        from book_address ba
                 left join category cate
                           on cate.category_id = ba.category_id
        where ba.deleted = 0 and  cate.category_code = #{categoryCode}
    </select>
    <select id="getBookAddressList" resultType="java.util.Map">
        select distinct
            ba.library_id "libraryId",
            li.library_name "libraryName",
            li.address "address",
            ba.door "door",
            ba.pressmark "pressmark",
            cate.category_name "categoryName",
            table1.count "pressmarkCount1",
            table2.count2 "pressmarkCount2"
        from book_address ba
                 left join library_info li
                           on li.library_id = ba.library_id
                 left join category cate
                           on cate.category_id = ba.category_id
                 left join (
            select
                count(ba.address_id) "count",
                ba.pressmark "pressmark"
            from book_address ba
            group by ba.pressmark
        ) table1
                           on table1.pressmark = ba.pressmark
                 left join (
            select
                count(ba.address_id) "count2",
                ba.pressmark "pressmark"
            from book_address ba
            where ba.`status` = 0
            group by ba.pressmark
        ) table2
                           on table2.pressmark = ba.pressmark
    </select>


</mapper>